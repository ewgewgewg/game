{"version":3,"sources":["home/index.js","roots/utils/getRandom.js","roots/utils/expand.js","roots/state.js","roots/space/index.js","roots/row/index.js","roots/board/index.js","roots/header/index.js","returnHome/index.js","roots/index.js","collide/utils/checkPlayerNear.js","collide/utils/colorMove.js","collide/utils/getRandom.js","collide/utils/generatePositions.js","collide/state.js","collide/space/index.js","collide/row/index.js","collide/board/index.js","collide/control/index.js","collide/index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","getRandom","max","Math","floor","random","expand","board","add","roots","i","length","j","push","dir","BoardContext","createContext","initialBoard","Array","fill","map","a","initialState","counter","seen","reducer","state","action","type","payload","rowNumber","colNumber","newBoard","slice","newSeen","resetBoard","Space","boardContext","useContext","boardState","onClick","alert","dispatch","Row","arr","Board","Header","JSON","stringify","ReturnHome","Roots","useReducer","Provider","value","checkPlayerNear","player","colorMove","newPlayer","color","newArray","item","row","column","rowAbs","abs","columnAbs","generatePositions","pairs","positions","temp","includes","Number","blue","green","enemyType","prevBlue","prevGreen","midBlue","midGreen","remove","indexOf","finalBlue","finalGreen","point","Control","Select","onChange","event","target","MenuItem","Collide","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dadd2d5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>Game Site</h1>\r\n      <div>\r\n        <Link to=\"/game/roots\">Underground Roots Game</Link>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/game/collide\">Collide Game</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const getRandom = (max) => Math.floor(Math.random() * max);\r\n\r\nexport default getRandom;\r\n","import getRandom from \"./getRandom\";\r\n\r\nconst expand = (board) => {\r\n  const roots = [];\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[0].length; j++) {\r\n      if (board[i][j]) roots.push([i, j]);\r\n    }\r\n  }\r\n  let add;\r\n  while (true) {\r\n    let [i, j] = roots[getRandom(roots.length)];\r\n    const dir = getRandom(4);\r\n    if (dir === 0) i++;\r\n    else if (dir === 1) j++;\r\n    else if (dir === 2) i--;\r\n    else j--;\r\n    if (\r\n      i > -1 &&\r\n      j > -1 &&\r\n      i < board.length &&\r\n      j < board[0].length &&\r\n      !board[i][j]\r\n    ) {\r\n      add = [i, j];\r\n      break;\r\n    }\r\n  }\r\n  return add;\r\n};\r\n\r\nexport default expand;\r\n","import { createContext } from \"react\";\r\nimport { getRandom } from \"./utils\";\r\n\r\nconst BoardContext = createContext();\r\nconst initialBoard = new Array(8).fill().map((a) => new Array(8).fill(false));\r\ninitialBoard[getRandom(8)][getRandom(8)] = true;\r\nlet counter = 1;\r\nconst initialState = { initialBoard, counter, seen: [] };\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"act\":\r\n      const [rowNumber, colNumber] = action.payload;\r\n      const newBoard = state.initialBoard.slice();\r\n      newBoard[rowNumber][colNumber] = true;\r\n      const newState = {\r\n        ...state,\r\n        counter: state.counter + 1,\r\n        initialBoard: newBoard,\r\n      };\r\n      return newState;\r\n    case \"memory\":\r\n      const newSeen = [...state.seen, action.payload];\r\n      return { ...state, seen: newSeen };\r\n    case \"reset\":\r\n      const resetBoard = new Array(8)\r\n        .fill()\r\n        .map((a) => new Array(8).fill(false));\r\n      resetBoard[getRandom(8)][getRandom(8)] = true;\r\n      return { counter: 1, initialBoard: resetBoard, seen: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { BoardContext, initialState, reducer };\r\n","import { useContext } from \"react\";\r\nimport { BoardContext } from \"../state\";\r\nimport { expand } from \"../utils\";\r\nimport \"./space.css\";\r\n\r\nfunction Space({ rowNumber, colNumber }) {\r\n  const boardContext = useContext(BoardContext);\r\n  const boardState = boardContext.state.initialBoard;\r\n  return (\r\n    <span\r\n      className=\"space\"\r\n      onClick={() => {\r\n        if (!boardState[rowNumber][colNumber]) {\r\n          const add = expand(boardState);\r\n          boardContext.dispatch({\r\n            type: \"memory\",\r\n            payload: [rowNumber, colNumber],\r\n          });\r\n          boardContext.dispatch({\r\n            type: \"act\",\r\n            payload: add,\r\n          });\r\n        } else {\r\n          alert(\"You have found the roots!\");\r\n          boardContext.dispatch({\r\n            type: \"reset\",\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      {`R: ${rowNumber}, C: ${colNumber}`}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Space;\r\n","import Space from \"../space\";\r\nimport \"./row.css\";\r\n\r\nfunction Row({ rowNumber }) {\r\n  const arr = new Array(8)\r\n    .fill()\r\n    .map((a, i) => <Space rowNumber={rowNumber} colNumber={i} />);\r\n\r\n  return <div className=\"rootsRow\">{arr}</div>;\r\n}\r\n\r\nexport default Row;\r\n","import Row from \"../row\";\r\nimport \"./board.css\";\r\n\r\nfunction Board() {\r\n  const arr = new Array(8).fill().map((a, i) => <Row rowNumber={i} />);\r\n\r\n  return arr;\r\n}\r\n\r\nexport default Board;\r\n","import { useContext } from \"react\";\r\nimport { BoardContext } from \"../state\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n  const boardContext = useContext(BoardContext);\r\n  if (boardContext.state.counter === 64) {\r\n    boardContext.dispatch({\r\n      type: \"reset\",\r\n    });\r\n    alert(\"All is below!\");\r\n  }\r\n  return (\r\n    <div className=\"Header\">\r\n      <div>Root Size: {JSON.stringify(boardContext.state.counter)}</div>\r\n      <div>Seen: {JSON.stringify(boardContext.state.seen)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./returnHome.css\";\r\n\r\nfunction ReturnHome() {\r\n  return (\r\n    <div className=\"returnHome\">\r\n      <Link to=\"/game\">Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReturnHome;\r\n","import { useReducer } from \"react\";\r\nimport Board from \"./board\";\r\nimport Header from \"./header\";\r\nimport ReturnHome from \"../returnHome\";\r\nimport { BoardContext, initialState, reducer } from \"./state\";\r\n\r\nfunction Roots() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <>\r\n      <BoardContext.Provider value={{ state, dispatch }}>\r\n        <Header />\r\n        <Board />\r\n      </BoardContext.Provider>\r\n      <ReturnHome />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Roots;\r\n","const checkPlayerNear = (player, rowNumber, colNumber) => {\r\n  if (player[0] + 1 === rowNumber && player[1] === colNumber) return true;\r\n  if (player[0] - 1 === rowNumber && player[1] === colNumber) return true;\r\n  if (player[0] === rowNumber && player[1] + 1 === colNumber) return true;\r\n  if (player[0] === rowNumber && player[1] - 1 === colNumber) return true;\r\n  return false;\r\n};\r\n\r\nexport default checkPlayerNear;\r\n","const colorMove = (newPlayer, color) => {\r\n  const newArray = [];\r\n  for (let item of color) {\r\n    const row = newPlayer[0] - item[0];\r\n    const column = newPlayer[1] - item[1];\r\n    const rowAbs = Math.abs(row);\r\n    const columnAbs = Math.abs(column);\r\n    if (rowAbs === columnAbs) {\r\n      newArray.push(item);\r\n    } else if ((rowAbs > columnAbs && columnAbs !== 0) || rowAbs === 0) {\r\n      //do col\r\n      if (column > 0) {\r\n        //player has higher value than enemy\r\n        newArray.push([item[0], item[1] + 1]);\r\n      } else {\r\n        //enemy has higher value than player\r\n        newArray.push([item[0], item[1] - 1]);\r\n      }\r\n    } else {\r\n      //do row\r\n      if (row > 0) {\r\n        //player has higher value than enemy\r\n        newArray.push([item[0] + 1, item[1]]);\r\n      } else {\r\n        //enemy has higher value than player\r\n        newArray.push([item[0] - 1, item[1]]);\r\n      }\r\n    }\r\n  }\r\n  return newArray;\r\n};\r\n\r\nexport default colorMove;\r\n","const getRandom = (max) => Math.floor(Math.random() * max);\r\n\r\nexport default getRandom;\r\n","import getRandom from \"./getRandom\";\r\n\r\nconst generatePositions = (pairs) => {\r\n  let positions = [];\r\n  for (let i = 0; i < pairs * 2 + 1; i++) {\r\n    let temp = `${getRandom(8)}/${getRandom(8)}`;\r\n    while (positions.includes(temp)) {\r\n      temp = `${getRandom(8)}/${getRandom(8)}`;\r\n    }\r\n    positions.push(temp);\r\n  }\r\n  positions = positions.map((a) => [Number(a[0]), Number(a[2])]);\r\n\r\n  const player = positions[0];\r\n  const blue = [];\r\n  const green = [];\r\n\r\n  for (let i = 1; i < positions.length; i += 2) {\r\n    blue.push(positions[i]);\r\n    green.push(positions[i + 1]);\r\n  }\r\n  return [player, blue, green];\r\n};\r\n\r\nexport default generatePositions;\r\n","import { createContext } from \"react\";\r\nimport { colorMove, generatePositions } from \"./utils\";\r\n\r\nconst BoardContext = createContext();\r\nconst initialState = { pairs: 2, enemyType: \"Blue\" };\r\n\r\nconst [player, blue, green] = generatePositions(initialState.pairs);\r\ninitialState.player = player;\r\ninitialState.blue = blue;\r\ninitialState.green = green;\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"pairs\":\r\n      const [player, blue, green] = generatePositions(action.payload);\r\n      return { ...state, player, blue, green, pairs: action.payload };\r\n    case \"enemyType\":\r\n      return { ...state, enemyType: action.payload };\r\n    case \"newTurn\":\r\n      const newPlayer = action.payload;\r\n      const prevBlue =\r\n        state.enemyType === \"Blue\"\r\n          ? colorMove(newPlayer, state.blue)\r\n          : state.blue;\r\n      const prevGreen =\r\n        state.enemyType === \"Green\"\r\n          ? colorMove(newPlayer, state.green)\r\n          : state.green;\r\n      const midBlue = prevBlue.map((a) => `${a[0]}/${a[1]}`);\r\n      const midGreen = prevGreen.map((a) => `${a[0]}/${a[1]}`);\r\n      const remove = {};\r\n      for (let i = 0; i < midBlue.length; i++) {\r\n        if (midGreen.indexOf(midBlue[i]) !== -1) remove[midBlue[i]] = true;\r\n      }\r\n      const finalBlue = [];\r\n      const finalGreen = [];\r\n\r\n      for (let blue of midBlue) {\r\n        if (!remove[blue]) {\r\n          finalBlue.push([Number(blue[0]), Number(blue[2])]);\r\n        }\r\n      }\r\n      for (let green of midGreen) {\r\n        if (!remove[green]) {\r\n          finalGreen.push([Number(green[0]), Number(green[2])]);\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        player: newPlayer,\r\n        blue: finalBlue,\r\n        green: finalGreen,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { BoardContext, initialState, reducer };\r\n","import { useContext } from \"react\";\r\nimport { BoardContext } from \"../state\";\r\nimport { checkPlayerNear } from \"../utils\";\r\nimport \"./space.css\";\r\n\r\nfunction Space({ rowNumber, colNumber }) {\r\n  const boardContext = useContext(BoardContext);\r\n  const { player, blue, green } = boardContext.state;\r\n  if (rowNumber === player[0] && colNumber === player[1]) {\r\n    return <span className=\"player collideSpace\">PLAYER</span>;\r\n  }\r\n  for (let point of blue) {\r\n    if (rowNumber === point[0] && colNumber === point[1]) {\r\n      return <span className=\"blue collideSpace\">BLUE</span>;\r\n    }\r\n  }\r\n  for (let point of green) {\r\n    if (rowNumber === point[0] && colNumber === point[1]) {\r\n      return <span className=\"green collideSpace\">GREEN</span>;\r\n    }\r\n  }\r\n  return (\r\n    <span\r\n      className=\"collideSpace\"\r\n      onClick={() => {\r\n        const playerNear = checkPlayerNear(player, rowNumber, colNumber);\r\n        if (playerNear) {\r\n          boardContext.dispatch({\r\n            type: \"newTurn\",\r\n            payload: [rowNumber, colNumber],\r\n          });\r\n        }\r\n      }}\r\n    >{`R: ${rowNumber}, C: ${colNumber}`}</span>\r\n  );\r\n}\r\n\r\nexport default Space;\r\n","import Space from \"../space\";\r\nimport \"./row.css\";\r\n\r\nfunction Row({ rowNumber }) {\r\n  const arr = new Array(8)\r\n    .fill()\r\n    .map((a, i) => <Space rowNumber={rowNumber} colNumber={i} />);\r\n\r\n  return <div className=\"collideRow\">{arr}</div>;\r\n}\r\n\r\nexport default Row;\r\n","import Row from \"../row\";\r\nimport \"./board.css\";\r\n\r\nfunction Board() {\r\n  const arr = new Array(8).fill().map((a, i) => <Row rowNumber={i} />);\r\n\r\n  return arr;\r\n}\r\n\r\nexport default Board;\r\n","import { useContext } from \"react\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport { BoardContext } from \"../state\";\r\nimport \"./control.css\";\r\n\r\nfunction Control() {\r\n  const boardContext = useContext(BoardContext);\r\n  const { pairs, enemyType } = boardContext.state;\r\n  const handlePairChange = (event) => {\r\n    boardContext.dispatch({\r\n      type: \"pairs\",\r\n      payload: event.target.value,\r\n    });\r\n  };\r\n  const handleEnemyTypeChange = (event) => {\r\n    boardContext.dispatch({\r\n      type: \"enemyType\",\r\n      payload: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"control\">\r\n      <div>Number of Starting Pairs: {pairs}</div>\r\n      <div>RESTART GAME: Change Starting Pairs to Restart</div>\r\n      <Select\r\n        // open={open}\r\n        // onClose={handleClose}\r\n        // onOpen={handleOpen}\r\n        value={pairs}\r\n        onChange={handlePairChange}\r\n      >\r\n        <MenuItem value={1}>One</MenuItem>\r\n        <MenuItem value={2}>Two</MenuItem>\r\n        <MenuItem value={3}>Three</MenuItem>\r\n        <MenuItem value={4}>Four</MenuItem>\r\n        <MenuItem value={5}>Five</MenuItem>\r\n      </Select>\r\n      <div>Current Color Movement: {enemyType}</div>\r\n      <div>Choose Active Color: </div>\r\n      <Select value={enemyType} onChange={handleEnemyTypeChange}>\r\n        <MenuItem value={\"Blue\"}>Blue</MenuItem>\r\n        <MenuItem value={\"Green\"}>Green</MenuItem>\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Control;\r\n","import { useReducer } from \"react\";\r\nimport Board from \"./board\";\r\nimport Control from \"./control\";\r\nimport ReturnHome from \"../returnHome\";\r\nimport { BoardContext, initialState, reducer } from \"./state\";\r\n\r\nfunction Collide() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <>\r\n      <BoardContext.Provider value={{ state, dispatch }}>\r\n        <Control />\r\n        <Board />\r\n      </BoardContext.Provider>\r\n      <ReturnHome />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Collide;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./home\";\nimport Roots from \"./roots\";\nimport Collide from \"./collide\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/game\">\n          <Home />\n        </Route>\n        <Route path=\"/game/roots\">\n          <Roots />\n        </Route>\n        <Route path=\"/game/collide\">\n          <Collide />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}